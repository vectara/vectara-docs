"use strict";(self.webpackChunkwww=self.webpackChunkwww||[]).push([[9789],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>f});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),d=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=d(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=d(n),m=o,f=u["".concat(c,".").concat(m)]||u[m]||p[m]||a;return n?r.createElement(f,i(i({ref:t},l),{},{components:n})):r.createElement(f,i({ref:t},l))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[u]="string"==typeof e?e:o,i[1]=s;for(var d=2;d<a;d++)i[d]=n[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4275:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>d});var r=n(87462),o=(n(67294),n(3905));const a={id:"index_document.js",title:"index_document.js",sidebar_label:"NodeJS"},i=void 0,s={unversionedId:"getting-started-samples/index_document.js",id:"getting-started-samples/index_document.js",title:"index_document.js",description:"This is an example of using the platform via REST.  For more sample code, including any dependencies this file has, please have a look at our GitHub examples repository.  This file can be found in that repo at nodejs/rest/index_document.js",source:"@site/docs/getting-started-samples/index_document.js.md",sourceDirName:"getting-started-samples",slug:"/getting-started-samples/index_document.js",permalink:"/docs/getting-started-samples/index_document.js",draft:!1,editUrl:"https://github.com/vectara/vectara-docs/tree/master/www/docs/getting-started-samples/index_document.js.md",tags:[],version:"current",frontMatter:{id:"index_document.js",title:"index_document.js",sidebar_label:"NodeJS"},sidebar:"someSidebar",previous:{title:"Java",permalink:"/docs/getting-started-samples/RestIndex.java"},next:{title:"PHP",permalink:"/docs/getting-started-samples/indexDocument.php"}},c={},d=[],l={toc:d};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"This is an example of using the platform via REST.  For more sample code, including any dependencies this file has, please have a look at our GitHub examples repository.  This file can be found in that repo at ",(0,o.kt)("a",{href:"https://github.com/vectara/getting-started/tree/main/language-examples/nodejs/rest/index_document.js"},"nodejs/rest/index_document.js")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="nodejs/rest/index_document.js"',title:'"nodejs/rest/index_document.js"'},"/**\n * This nodejs module has an index function which uses Vectara's \n * index API via REST\n */\n\n const axios = require('axios');\n\n module.exports = {\n     indexDocument: async function (customer_id, corpus_id, indexing_endpoint, jwt_token) {\n         const data = {\n            'customer_id': customer_id,\n            'corpus_id': corpus_id,\n            'document': {\n                'document_id': 'doc-id-1',\n                'title': 'An example title',\n                'metadata_json': JSON.stringify({\n                    \"book-name\": \"An example title\",\n                    \"collection\": \"Chemistry\",\n                    \"author\": \"Example Author\"\n                }),\n                'section': [\n                    {\n                        'text': 'This is a test document'\n                    }\n                ]\n            }\n         };\n         /**\n          * Note that both documents and sections can contain titles and\n          * metadata_json.  These are optional for both levels.\n          */\n         const config = {\n             headers: {\n                 'Authorization': `Bearer ${jwt_token}`,\n                 'Content-Type': 'application/json',\n                 'customer-id': customer_id.toString()\n             }\n         };\n \n         const result = await axios.post(`https://${indexing_endpoint}/v1/index`, data, config);\n         return result;\n     }\n };\n")))}u.isMDXComponent=!0}}]);