"use strict";(self.webpackChunkwww=self.webpackChunkwww||[]).push([[4161],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),d=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=d(e.components);return a.createElement(l.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=d(n),m=o,f=c["".concat(l,".").concat(m)]||c[m]||u[m]||r;return n?a.createElement(f,i(i({ref:t},p),{},{components:n})):a.createElement(f,i({ref:t},p))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[c]="string"==typeof e?e:o,i[1]=s;for(var d=2;d<r;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},43416:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>r,metadata:()=>s,toc:()=>d});var a=n(87462),o=(n(67294),n(3905));const r={id:"format-for-upload",title:"Format JSON and Pbtext Files"},i=void 0,s={unversionedId:"indexing-apis/format-for-upload",id:"indexing-apis/format-for-upload",title:"Format JSON and Pbtext Files",description:"When uploading files using the File Upload Service, you may",source:"@site/docs/indexing-apis/file_formats.md",sourceDirName:"indexing-apis",slug:"/indexing-apis/format-for-upload",permalink:"/docs/indexing-apis/format-for-upload",draft:!1,editUrl:"https://github.com/vectara/vectara-docs/tree/master/www/docs/indexing-apis/file_formats.md",tags:[],version:"current",frontMatter:{id:"format-for-upload",title:"Format JSON and Pbtext Files"},sidebar:"someSidebar",previous:{title:"API Definition",permalink:"/docs/indexing-apis/file-upload"},next:{title:"Supported File Types",permalink:"/docs/indexing-apis/file-upload-filetypes"}},l={},d=[{value:"JSON",id:"json",level:2},{value:"Pbtxt",id:"pbtxt",level:2},{value:"Python",id:"python",level:2}],p={toc:d};function c(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"When uploading files using the ",(0,o.kt)("a",{parentName:"p",href:"/docs/indexing-apis/file-upload"},"File Upload Service"),", you may\nsend any of the predefined formats like markdown, PDF, and MS Word."),(0,o.kt)("p",null,"Alternatively, you may perform the text extraction yourself, and save the result\nas a JSON or text serialized ",(0,o.kt)("a",{parentName:"p",href:"/docs/indexing-apis/indexing#document"},"Document proto"),". The benefit\nof this approach is that you can attach your own metadata to the document, or\nto individual sections within it."),(0,o.kt)("p",null,"Below is a sample document in each format."),(0,o.kt)("h2",{id:"json"},"JSON"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "documentId": "selected-works-of-shakespeare",\n  "title": "William Shakespeare, Greatest Hits",\n  "metadataJson": "{\\"timespan\\":\\"26 April 1564---23 April 1616\\",\\"stars\\":5,\\"author\\":\\"William Shakespeare\\"}",\n  "section": [\n    {\n      "title": "King Lear",\n      "section": [\n        {\n          "title": "Act I",\n          "text": "KENT: I thought the king had more affected the Duke of Albany than Cornwall.\\nGLOUCESTER: It did always seem so to us...",\n          "metadataJson": "{\\"stage-instructions\\":\\"Enter KENT, GLOUCESTER, and EDMUND\\"}"\n        },\n        {\n          "title": "Act II",\n          "text": "EDMUND: Save thee, Curan. ...",\n          "metadataJson": "{\\"stage-instructions\\":\\"Enter EDMUND, and CURAN meets him\\"}"\n        }\n      ]\n    },\n    {\n      "title": "Antony and Cleopatra",\n      "text": "PHILO: Nay, but this dotage of our general\'s\\nO\'erflows the measure: those his goodly eyes, ..."\n    }\n  ]\n}\n')),(0,o.kt)("h2",{id:"pbtxt"},"Pbtxt"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'document_id: "selected-works-of-shakespeare"\ntitle: "William Shakespeare, Greatest Hits"\nmetadata_json: "{\\"timespan\\":\\"26 April 1564---23 April 1616\\",\\"stars\\":5,\\"author\\":\\"William Shakespeare\\"}"\nsection {\n  title: "King Lear"\n  section {\n    title: "Act I"\n    text: "KENT: I thought the king had more affected the Duke of Albany than Cornwall.\\nGLOUCESTER: It did always seem so to us..."\n    metadata_json: "{\\"stage-instructions\\":\\"Enter KENT, GLOUCESTER, and EDMUND\\"}"\n  }\n  section {\n    title: "Act II"\n    text: "EDMUND: Save thee, Curan. ..."\n    metadata_json: "{\\"stage-instructions\\":\\"Enter EDMUND, and CURAN meets him\\"}"\n  }\n}\nsection {\n  title: "Antony and Cleopatra"\n  text: "PHILO: Nay, but this dotage of our general\\\'s\\nO\\\'erflows the measure: those his goodly eyes, ..."\n}\n')),(0,o.kt)("h2",{id:"python"},"Python"),(0,o.kt)("p",null,"For reference, these documents were output by the following Python program:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-py"},"\"\"\"Illustrate pbtxt and JSON output formats.\"\"\"\n\nimport json\nfrom google.protobuf.json_format import MessageToJson\nfrom google.protobuf.text_format import MessageToString\n\nimport indexing_pb2\n\ndef main():\n  doc = indexing_pb2.Document()\n  doc.document_id = 'selected-works-of-shakespeare'\n  doc.title = 'William Shakespeare, Greatest Hits'\n  metadata = {\n    'timespan': '26 April 1564---23 April 1616',\n    'stars': 5,\n    'author': 'William Shakespeare'\n  }\n  doc.metadata_json = json.dumps(metadata, separators=(',', ':'))\n  section = doc.section.add()\n  section.title = 'King Lear'\n  act1 = section.section.add()\n  act1.title = 'Act I'\n  act1.metadata_json = json.dumps({\n    'stage-instructions': 'Enter KENT, GLOUCESTER, and EDMUND'\n  }, separators=(',', ':'))\n  act1.text = 'KENT: I thought the king had more affected the Duke of Albany than Cornwall.\\nGLOUCESTER: It did always seem so to us...'\n\n  act2 = section.section.add()\n  act2.title = 'Act II'\n  act2.metadata_json = json.dumps({\n    'stage-instructions': 'Enter EDMUND, and CURAN meets him'\n  }, separators=(',', ':'))\n  act2.text = 'EDMUND: Save thee, Curan. ...'\n\n  section = doc.section.add()\n  section.title = 'Antony and Cleopatra'\n  section.text = 'PHILO: Nay, but this dotage of our general\\'s\\nO\\'erflows the measure: those his goodly eyes, ...'\n\n  print(MessageToJson(doc))\n  print()\n  print(MessageToString(doc))\n\n\nif __name__ == \"__main__\":\n    main()\n\n")))}c.isMDXComponent=!0}}]);