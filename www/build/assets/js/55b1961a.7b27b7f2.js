"use strict";(self.webpackChunkwww=self.webpackChunkwww||[]).push([[8398],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>g});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),u=c(n),h=a,g=u["".concat(s,".").concat(h)]||u[h]||d[h]||o;return n?r.createElement(g,i(i({ref:t},l),{},{components:n})):r.createElement(g,i({ref:t},l))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=h;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p[u]="string"==typeof e?e:a,i[1]=p;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},69475:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>p,toc:()=>c});var r=n(87462),a=(n(67294),n(3905));const o={id:"getJwtToken.php",title:"getJwtToken.php",sidebar_label:"PHP"},i=void 0,p={unversionedId:"getting-started-samples/getJwtToken.php",id:"getting-started-samples/getJwtToken.php",title:"getJwtToken.php",description:"This is an example of using the platform via REST.  For more sample code, including any dependencies this file has, please have a look at our GitHub examples repository.  This file can be found in that repo at php/rest/getJwtToken.php",source:"@site/docs/getting-started-samples/getJwtToken.php.md",sourceDirName:"getting-started-samples",slug:"/getting-started-samples/getJwtToken.php",permalink:"/docs/getting-started-samples/getJwtToken.php",draft:!1,editUrl:"https://github.com/vectara/vectara-docs/tree/master/www/docs/getting-started-samples/getJwtToken.php.md",tags:[],version:"current",frontMatter:{id:"getJwtToken.php",title:"getJwtToken.php",sidebar_label:"PHP"},sidebar:"someSidebar",previous:{title:"Java",permalink:"/docs/getting-started-samples/JwtFetcher.java"},next:{title:"Python",permalink:"/docs/getting-started-samples/rest_util.py"}},s={},c=[],l={toc:c};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"This is an example of using the platform via REST.  For more sample code, including any dependencies this file has, please have a look at our GitHub examples repository.  This file can be found in that repo at ",(0,a.kt)("a",{href:"https://github.com/vectara/getting-started/tree/main/language-examples/php/rest/getJwtToken.php"},"php/rest/getJwtToken.php")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="php/rest/getJwtToken.php"',title:'"php/rest/getJwtToken.php"'},"<?php\n/**\n * Returns an Authentication token based on the parameters passed.\n *\n * @auth_url         Authentication URL for this customer.\n * @client_id        App client ID.\n * @client_secret    App client secret.\n *\n * Returns           A valid app token in case of success or empty in case of failure.\n */\nfunction get_token($auth_url, $client_id, $client_secret)\n{\n    $url = $auth_url . '/oauth2/token';\n    $encoded = base64_encode($client_id . ':' . $client_secret);\n\n    $fields = [\n        'grant_type' => 'client_credentials',\n        'client_id' => $client_id,\n    ];\n\n    $ch = curl_init();\n    curl_setopt($ch, CURLOPT_URL, $url);\n    curl_setopt($ch, CURLOPT_POST, true);\n    curl_setopt($ch, CURLOPT_HTTPHEADER, ['Authorization: Basic ' . $encoded]);\n    curl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query($fields));\n    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\n\n    $result = curl_exec($ch);\n    curl_close($ch);\n\n    $data = json_decode($result);\n    return $data->access_token;\n}\n?>\n\n")))}u.isMDXComponent=!0}}]);