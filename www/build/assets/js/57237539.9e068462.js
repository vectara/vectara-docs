"use strict";(self.webpackChunkwww=self.webpackChunkwww||[]).push([[1889],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>v});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},s=Object.keys(e);for(a=0;a<s.length;a++)r=s[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)r=s[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=a.createContext({}),c=function(e){var t=a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},l=function(e){var t=c(e.components);return a.createElement(p.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,s=e.originalType,p=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),u=c(r),d=n,v=u["".concat(p,".").concat(d)]||u[d]||m[d]||s;return r?a.createElement(v,o(o({ref:t},l),{},{components:r})):a.createElement(v,o({ref:t},l))}));function v(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=r.length,o=new Array(s);o[0]=d;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[u]="string"==typeof e?e:n,o[1]=i;for(var c=2;c<s;c++)o[c]=r[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},47010:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var a=r(87462),n=(r(67294),r(3905));const s={id:"RestCreateCorpus.java",title:"RestCreateCorpus.java",sidebar_label:"Java"},o=void 0,i={unversionedId:"getting-started-samples/RestCreateCorpus.java",id:"getting-started-samples/RestCreateCorpus.java",title:"RestCreateCorpus.java",description:"This is an example of using the platform via REST.  For more sample code, including any dependencies this file has, please have a look at our GitHub examples repository.  This file can be found in that repo at java/rest/src/main/java/com/vectara/examples/rest/RestCreateCorpus.java",source:"@site/docs/getting-started-samples/RestCreateCorpus.java.md",sourceDirName:"getting-started-samples",slug:"/getting-started-samples/RestCreateCorpus.java",permalink:"/docs/getting-started-samples/RestCreateCorpus.java",draft:!1,editUrl:"https://github.com/vectara/vectara-docs/tree/master/www/docs/getting-started-samples/RestCreateCorpus.java.md",tags:[],version:"current",frontMatter:{id:"RestCreateCorpus.java",title:"RestCreateCorpus.java",sidebar_label:"Java"},sidebar:"someSidebar",previous:{title:"API Definition",permalink:"/docs/admin-apis/create-corpus"},next:{title:"NodeJS",permalink:"/docs/getting-started-samples/create_corpus.js"}},p={},c=[],l={toc:c};function u(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"This is an example of using the platform via REST.  For more sample code, including any dependencies this file has, please have a look at our GitHub examples repository.  This file can be found in that repo at ",(0,n.kt)("a",{href:"https://github.com/vectara/getting-started/tree/main/language-examples/java/rest/src/main/java/com/vectara/examples/rest/RestCreateCorpus.java"},"java/rest/src/main/java/com/vectara/examples/rest/RestCreateCorpus.java")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="java/rest/src/main/java/com/vectara/examples/rest/RestCreateCorpus.java"',title:'"java/rest/src/main/java/com/vectara/examples/rest/RestCreateCorpus.java"'},'package com.vectara.examples.rest;\n\nimport java.net.URI;\nimport java.net.http.HttpRequest;\nimport java.net.http.HttpRequest.BodyPublishers;\nimport java.net.http.HttpResponse;\nimport java.net.http.HttpResponse.BodyHandlers;\n\npublic class RestCreateCorpus {\n\n  /**\n   * Calls Vectara Admin platform to create a corpus.\n   *\n   * @param jwtToken A valid JWT token.\n   * @param adminUrl Admin URL at which gRPC endpoints are available.\n   * @param corpusName The name of the corpus to be created.\n   * @param customerId The unique customer ID in Vectara platform.\n   * @return success or failure.\n   */\n  public static boolean createCorpus(\n      String jwtToken, String adminUrl, String corpusName, long customerId) {\n    String corpusJson =\n        "{"\n          + "\\"corpus\\":"\n            + "{"\n              + "\\"name\\":\\"" + corpusName + "\\","\n              + "\\"description\\":\\"Dummy description\\""\n            + "}"\n        + "}";\n    try {\n      HttpRequest.Builder builder =\n          HttpRequest.newBuilder()\n              .uri(URI.create(String.format("https://%s/v1/create-corpus", adminUrl)))\n              .headers(\n                  "Content-Type", "application/json", "customer-id", String.valueOf(customerId))\n              .POST(BodyPublishers.ofString(corpusJson));\n\n      builder.header("Authorization", "Bearer " + jwtToken);\n      HttpRequest request = builder.build();\n      HttpResponse<String> response = RestUtil.newHttpClient().send(request, BodyHandlers.ofString());\n      /**\n       * Here is how a successful JSON response sample:\n       * {\n       *   "corpusId": 1,\n       *   "status": {\n       *     "code": "OK",\n       *     "statusDetail": "Corpus Created"\n       *   }\n       * }\n       */\n      System.out.printf("Create Corpus response: %s", response.toString());\n      return true;\n    } catch (Exception e) {\n      e.printStackTrace();\n      return false;\n    }\n  }\n}\n\n')))}u.isMDXComponent=!0}}]);