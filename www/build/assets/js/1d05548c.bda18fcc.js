"use strict";(self.webpackChunkwww=self.webpackChunkwww||[]).push([[1897,2917],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=l(n),m=a,f=p["".concat(c,".").concat(m)]||p[m]||d[m]||o;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[p]="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},85162:(e,t,n)=>{n.d(t,{Z:()=>i});var r=n(67294),a=n(86010);const o="tabItem_Ymn6";function i(e){let{children:t,hidden:n,className:i}=e;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(o,i),hidden:n},t)}},65488:(e,t,n)=>{n.d(t,{Z:()=>m});var r=n(87462),a=n(67294),o=n(86010),i=n(72389),s=n(67392),c=n(7094),l=n(12466);const u="tabList__CuJ",p="tabItem_LNqP";function d(e){const{lazy:t,block:n,defaultValue:i,values:d,groupId:m,className:f}=e,h=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),b=d??h.map((e=>{let{props:{value:t,label:n,attributes:r}}=e;return{value:t,label:n,attributes:r}})),y=(0,s.l)(b,((e,t)=>e.value===t.value));if(y.length>0)throw new Error(`Docusaurus error: Duplicate values "${y.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const v=null===i?i:i??h.find((e=>e.props.default))?.props.value??h[0].props.value;if(null!==v&&!b.some((e=>e.value===v)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${v}" but none of its children has the corresponding value. Available values are: ${b.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:g,setTabGroupChoices:w}=(0,c.U)(),[k,O]=(0,a.useState)(v),T=[],{blockElementScrollPositionUntilNextRender:E}=(0,l.o5)();if(null!=m){const e=g[m];null!=e&&e!==k&&b.some((t=>t.value===e))&&O(e)}const q=e=>{const t=e.currentTarget,n=T.indexOf(t),r=b[n].value;r!==k&&(E(t),O(r),null!=m&&w(m,String(r)))},N=e=>{let t=null;switch(e.key){case"Enter":q(e);break;case"ArrowRight":{const n=T.indexOf(e.currentTarget)+1;t=T[n]??T[0];break}case"ArrowLeft":{const n=T.indexOf(e.currentTarget)-1;t=T[n]??T[T.length-1];break}}t?.focus()};return a.createElement("div",{className:(0,o.Z)("tabs-container",u)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},f)},b.map((e=>{let{value:t,label:n,attributes:i}=e;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:k===t?0:-1,"aria-selected":k===t,key:t,ref:e=>T.push(e),onKeyDown:N,onClick:q},i,{className:(0,o.Z)("tabs__item",p,i?.className,{"tabs__item--active":k===t})}),n??t)}))),t?(0,a.cloneElement)(h.filter((e=>e.props.value===k))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},h.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==k})))))}function m(e){const t=(0,i.Z)();return a.createElement(d,(0,r.Z)({key:String(t)},e))}},78473:(e,t,n)=>{n.r(t),n.d(t,{Config:()=>p,assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>i,metadata:()=>c,toc:()=>u});var r=n(87462),a=(n(67294),n(3905)),o=n(53487);const i={},s=void 0,c={unversionedId:"definitions",id:"definitions",title:"definitions",description:"",source:"@site/docs/definitions.md",sourceDirName:".",slug:"/definitions",permalink:"/docs/definitions",draft:!1,editUrl:"https://github.com/vectara/vectara-docs/tree/master/www/docs/definitions.md",tags:[],version:"current",frontMatter:{}},l={},u=[];function p(e){return o.g[e.v]}const d={toc:u,Config:p};function m(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}))}m.isMDXComponent=!0},39639:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>c,toc:()=>u});var r=n(87462),a=(n(67294),n(3905)),o=(n(65488),n(85162),n(78473));n(53487);const i={id:"batched-queries",title:"Batching Multiple Queries",sidebar_label:"Batched Queries"},s=void 0,c={unversionedId:"search-apis/batched-queries",id:"search-apis/batched-queries",title:"Batching Multiple Queries",description:"Some applications may be designed to be powered by different queries in",source:"@site/docs/search-apis/batched-queries.md",sourceDirName:"search-apis",slug:"/search-apis/batched-queries",permalink:"/docs/search-apis/batched-queries",draft:!1,editUrl:"https://github.com/vectara/vectara-docs/tree/master/www/docs/search-apis/batched-queries.md",tags:[],version:"current",frontMatter:{id:"batched-queries",title:"Batching Multiple Queries",sidebar_label:"Batched Queries"},sidebar:"someSidebar",previous:{title:"Data Types",permalink:"/docs/search-apis/sql/data-types"},next:{title:"Metadata",permalink:"/docs/search-apis/interpreting-responses/metadata"}},l={},u=[],p={toc:u};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Some applications may be designed to be powered by different queries in\ndifferent parts of the UI.  In order to decrease the number of network round\ntrips (and thereby the net latency), you may want to issue those multiple\nqueries to the system with a single API call."),(0,a.kt)("p",null,"This pattern can be done in ",(0,a.kt)(o.Config,{v:"names.product",mdxType:"Config"})," by sending an array of\nqueries in a single request, as in:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'{\n  "query": [\n     {\n       ... Query 1 ...\n     },\n     {\n       ... Query 2 ...\n     },\n     ...\n  ]\n}\n')),(0,a.kt)("admonition",{type:"important"},(0,a.kt)("p",{parentName:"admonition"},"When using batched queries, each query within the query array counts as a\nseparate query for billing purposes.")),(0,a.kt)("h1",{id:"responses"},"Responses"),(0,a.kt)("p",null,"When you a query ",(0,a.kt)(o.Config,{v:"names.product",mdxType:"Config"}),", you get back an array oof results\nThis is to assist in using a\n",(0,a.kt)("a",{parentName:"p",href:"/docs/search-apis/batched-queries"},"Batched Query"),", "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'{\n    "responseSet": [\n        {\n            ... Response 1 ...\n        },\n        {\n            ... Response 2 ...\n        },\n        ...\n    ]\n}\n')),(0,a.kt)("p",null,"Each response object within the ",(0,a.kt)("inlineCode",{parentName:"p"},"responseSet")," array is directly associated with\nthe query in the same position as the response.  e.g. in this example case,\nthe block in ",(0,a.kt)("inlineCode",{parentName:"p"},"Response 1")," will be the results for ",(0,a.kt)("inlineCode",{parentName:"p"},"Query 1"),".  Therefore, it's\nimportant you keep track of the order of your queries in order to interpret\nthe responses."))}d.isMDXComponent=!0},53487:e=>{e.exports=JSON.parse('{"g":{"domains.rest.serving":"api.vectara.io","domains.rest.admin":"api.vectara.io","domains.rest.indexing":"api.vectara.io","domains.grpc.serving":"serving.vectara.io","domains.grpc.admin":"admin.vectara.io","domains.grpc.indexing":"indexing.vectara.io","domains.oauth":"vectara-prod-${CUSTOMER_ID}.auth.us-west-2.amazoncognito.com","package.protobuf":"com.vectara","package.java":"com.vectara","package.php":"Com\\\\Vectara","names.company":"Vectara","names.product":"Vectara"}}')}}]);