"use strict";(self.webpackChunkwww=self.webpackChunkwww||[]).push([[333],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),c=p(n),f=a,m=c["".concat(l,".").concat(f)]||c[f]||u[f]||o;return n?r.createElement(m,i(i({ref:t},d),{},{components:n})):r.createElement(m,i({ref:t},d))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=f;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[c]="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},57692:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var r=n(87462),a=(n(67294),n(3905));const o={id:"upload_file.js",title:"upload_file.js",sidebar_label:"NodeJS"},i=void 0,s={unversionedId:"getting-started-samples/upload_file.js",id:"getting-started-samples/upload_file.js",title:"upload_file.js",description:"This is an example of using the platform via REST.  For more sample code, including any dependencies this file has, please have a look at our GitHub examples repository.  This file can be found in that repo at nodejs/rest/upload_file.js",source:"@site/docs/getting-started-samples/upload_file.js.md",sourceDirName:"getting-started-samples",slug:"/getting-started-samples/upload_file.js",permalink:"/docs/getting-started-samples/upload_file.js",draft:!1,editUrl:"https://github.com/vectara/vectara-docs/tree/master/www/docs/getting-started-samples/upload_file.js.md",tags:[],version:"current",frontMatter:{id:"upload_file.js",title:"upload_file.js",sidebar_label:"NodeJS"},sidebar:"someSidebar",previous:{title:"Java",permalink:"/docs/getting-started-samples/RestUploadFile.java"},next:{title:"PHP",permalink:"/docs/getting-started-samples/uploadFile.php"}},l={},p=[],d={toc:p};function c(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"This is an example of using the platform via REST.  For more sample code, including any dependencies this file has, please have a look at our GitHub examples repository.  This file can be found in that repo at ",(0,a.kt)("a",{href:"https://github.com/vectara/getting-started/tree/main/language-examples/nodejs/rest/upload_file.js"},"nodejs/rest/upload_file.js")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="nodejs/rest/upload_file.js"',title:'"nodejs/rest/upload_file.js"'},"/**\n * This nodejs module has an uploadFile function which uses Vectara's \n * document upload API via REST\n */\n\nconst axios = require('axios');\nconst fs = require('fs');\nconst FormData = require('form-data');\n\nmodule.exports = {\n    uploadFile: async function (customer_id, corpus_id, indexing_endpoint, jwt_token) {\n        const data = new FormData();\n        data.append('c', customer_id);\n        data.append('o', corpus_id);\n        data.append('file', fs.createReadStream(__dirname + '/upload.pdf'));\n\n        const config = {\n            headers: {\n                'Authorization': `Bearer ${jwt_token}`,\n                'Content-Type': 'multipart/form-data'\n            }\n        };\n        const result = await axios.post(`https://${indexing_endpoint}/v1/upload`, data, config);\n        return result;\n    }\n};\n")))}c.isMDXComponent=!0}}]);