"use strict";(self.webpackChunkwww=self.webpackChunkwww||[]).push([[1330,2917],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>f});var i=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=i.createContext({}),p=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},l=function(e){var t=p(e.components);return i.createElement(s.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,l=d(e,["components","mdxType","originalType","parentName"]),c=p(n),m=a,f=c["".concat(s,".").concat(m)]||c[m]||u[m]||r;return n?i.createElement(f,o(o({ref:t},l),{},{components:n})):i.createElement(f,o({ref:t},l))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=m;var d={};for(var s in t)hasOwnProperty.call(t,s)&&(d[s]=t[s]);d.originalType=e,d[c]="string"==typeof e?e:a,o[1]=d;for(var p=2;p<r;p++)o[p]=n[p];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},78473:(e,t,n)=>{n.r(t),n.d(t,{Config:()=>c,assets:()=>p,contentTitle:()=>d,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var i=n(87462),a=(n(67294),n(3905)),r=n(53487);const o={},d=void 0,s={unversionedId:"definitions",id:"definitions",title:"definitions",description:"",source:"@site/docs/definitions.md",sourceDirName:".",slug:"/definitions",permalink:"/docs/definitions",draft:!1,editUrl:"https://github.com/vectara/vectara-docs/tree/master/www/docs/definitions.md",tags:[],version:"current",frontMatter:{}},p={},l=[];function c(e){return r.g[e.v]}const u={toc:l,Config:c};function m(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,i.Z)({},u,n,{components:t,mdxType:"MDXLayout"}))}m.isMDXComponent=!0},65393:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>d,metadata:()=>p,toc:()=>c});var i=n(87462),a=(n(67294),n(3905)),r=n(78473),o=n(53487);const d={id:"file-upload",title:"API Definition"},s=void 0,p={unversionedId:"indexing-apis/file-upload",id:"indexing-apis/file-upload",title:"API Definition",description:"Endpoint Address",source:"@site/docs/indexing-apis/file_upload.md",sourceDirName:"indexing-apis",slug:"/indexing-apis/file-upload",permalink:"/docs/indexing-apis/file-upload",draft:!1,editUrl:"https://github.com/vectara/vectara-docs/tree/master/www/docs/indexing-apis/file_upload.md",tags:[],version:"current",frontMatter:{id:"file-upload",title:"API Definition"},sidebar:"someSidebar",previous:{title:"API Definition",permalink:"/docs/indexing-apis/core_indexing"},next:{title:"Format JSON and Pbtext Files",permalink:"/docs/indexing-apis/format-for-upload"}},l={},c=[{value:"Endpoint Address",id:"endpoint-address",level:2},{value:"Request Details",id:"request-details",level:2},{value:"Response Codes",id:"response-codes",level:2},{value:"Command Line Invocation",id:"command-line-invocation",level:2}],u={toc:c};function m(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,i.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"endpoint-address"},"Endpoint Address"),(0,a.kt)(r.Config,{v:"names.product",mdxType:"Config"})," exposes an HTTP endpoint at the following URL to upload and index documents into a corpus:",(0,a.kt)("code",null,"https://",(0,a.kt)(r.Config,{v:"domains.rest.indexing",mdxType:"Config"}),"/v1/upload"),"This page describes the details of interacting with this endpoint.",(0,a.kt)("h2",{id:"request-details"},"Request Details"),(0,a.kt)("p",null,"The endpoint expects an ",(0,a.kt)("inlineCode",{parentName:"p"},"multipart/form-data")," ",(0,a.kt)("inlineCode",{parentName:"p"},"POST")," request that includes the\nfollowing http parameters:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"c")," ","[required]",": Customer ID.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"o")," ","[required]",": Corpus ID into which the document should be indexed.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"d")," ","[optional]",": If set to ",(0,a.kt)("inlineCode",{parentName:"p"},"true"),", the server returns the extracted\ndocument that was indexed. This parameter is useful when a raw file is\nbeing uploaded (e.g., pdf, docx) instead of a file containing the\n",(0,a.kt)("inlineCode",{parentName:"p"},"Document")," proto message (e.g., pbtxt, pb, json). The caller can inspect\nthe retruned extracted ",(0,a.kt)("inlineCode",{parentName:"p"},"Document")," proto message from the raw file."))),(0,a.kt)("p",null,"Apart from these parameters, the servers expect a valid JWT Token in the HTTP\nheaders."),(0,a.kt)("p",null,"The maximum file size supported by the server is 10 MB."),(0,a.kt)("admonition",{type:"important"},(0,a.kt)("p",{parentName:"admonition"},"When using the file upload API, it's not possible to provide additional\nuser-supplied metadata beyond what is extracted by ",(0,a.kt)(r.Config,{v:"names.product",mdxType:"Config"}),".\nIf you need to provide additional metadata, it's recommended to pre-parse\nany raw documents and provide the metadata using the standard indexing API")),(0,a.kt)("h2",{id:"response-codes"},"Response Codes"),(0,a.kt)("p",null,"The server responds with ",(0,a.kt)("inlineCode",{parentName:"p"},"200")," when the file was uploaded and indexed\nsuccessfully. Note that it may still take a few minutes (typically 5-10 mins)\nbefore the document is served."),(0,a.kt)("p",null,"Some error codes returned by the server are:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"400"),": An invalid request was sent. E.g., one of the required parameters\nwas missing, or the corpus ID does not exist.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"401"),": The caller is not authenticated.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"403"),": The caller is not authorized to add documents to the corpus.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"409"),": A document already exists in the corpus with the same document ID,\nyet the contents of the indexed document are different than the file being\nuploaded. Since the indexer is idempotent, the same document (identified by\nthe document ID) can be uploaded multiple times. The indexer does not support\nupdates yet, so an error is returned when a different document is uploaded for\nthe same document ID. Note that when a raw file is uploaded, the file name is\nused as the document ID.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"507"),": There is no more indexing quota left for the corpus or customer to\nindex more documents."))),(0,a.kt)("h2",{id:"command-line-invocation"},"Command Line Invocation"),(0,a.kt)("p",null,"The following command shows how to upload a file ",(0,a.kt)("inlineCode",{parentName:"p"},"/tmp/instructions.pdf")," to\ncorpus ",(0,a.kt)("inlineCode",{parentName:"p"},"151")," in customer ",(0,a.kt)("inlineCode",{parentName:"p"},"123456")," using ",(0,a.kt)("inlineCode",{parentName:"p"},"curl"),"."),(0,a.kt)("pre",null,`$ jwt=eyJraWQ...\n$ curl -H "Authorization: Bearer $jwt" -F file=@/tmp/instructions.pdf \\\n    https://${o.g["domains.rest.indexing"]}:443/v1/upload?c=123456&o=151\n`))}m.isMDXComponent=!0},53487:e=>{e.exports=JSON.parse('{"g":{"domains.rest.serving":"api.vectara.io","domains.rest.admin":"api.vectara.io","domains.rest.indexing":"api.vectara.io","domains.grpc.serving":"serving.vectara.io","domains.grpc.admin":"admin.vectara.io","domains.grpc.indexing":"indexing.vectara.io","domains.oauth":"vectara-prod-${CUSTOMER_ID}.auth.us-west-2.amazoncognito.com","package.protobuf":"com.vectara","package.java":"com.vectara","package.php":"Com\\\\Vectara","names.company":"Vectara","names.product":"Vectara"}}')}}]);