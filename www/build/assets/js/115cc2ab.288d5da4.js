"use strict";(self.webpackChunkwww=self.webpackChunkwww||[]).push([[830],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),p=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(i.Provider,{value:t},e.children)},l="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,s=e.originalType,i=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),l=p(r),m=a,f=l["".concat(i,".").concat(m)]||l[m]||d[m]||s;return r?n.createElement(f,o(o({ref:t},u),{},{components:r})):n.createElement(f,o({ref:t},u))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=r.length,o=new Array(s);o[0]=m;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c[l]="string"==typeof e?e:a,o[1]=c;for(var p=2;p<s;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},14691:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>l,frontMatter:()=>s,metadata:()=>c,toc:()=>p});var n=r(87462),a=(r(67294),r(3905));const s={id:"create_corpus.js",title:"create_corpus.js",sidebar_label:"NodeJS"},o=void 0,c={unversionedId:"getting-started-samples/create_corpus.js",id:"getting-started-samples/create_corpus.js",title:"create_corpus.js",description:"This is an example of using the platform via REST.  For more sample code, including any dependencies this file has, please have a look at our GitHub examples repository.  This file can be found in that repo at nodejs/rest/create_corpus.js",source:"@site/docs/getting-started-samples/create_corpus.js.md",sourceDirName:"getting-started-samples",slug:"/getting-started-samples/create_corpus.js",permalink:"/docs/getting-started-samples/create_corpus.js",draft:!1,editUrl:"https://github.com/vectara/vectara-docs/tree/master/www/docs/getting-started-samples/create_corpus.js.md",tags:[],version:"current",frontMatter:{id:"create_corpus.js",title:"create_corpus.js",sidebar_label:"NodeJS"},sidebar:"someSidebar",previous:{title:"Java",permalink:"/docs/getting-started-samples/RestCreateCorpus.java"},next:{title:"PHP",permalink:"/docs/getting-started-samples/createCorpus.php"}},i={},p=[],u={toc:p};function l(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"This is an example of using the platform via REST.  For more sample code, including any dependencies this file has, please have a look at our GitHub examples repository.  This file can be found in that repo at ",(0,a.kt)("a",{href:"https://github.com/vectara/getting-started/tree/main/language-examples/nodejs/rest/create_corpus.js"},"nodejs/rest/create_corpus.js")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="nodejs/rest/create_corpus.js"',title:'"nodejs/rest/create_corpus.js"'},"/**\n * This nodejs module has a createCorpus function which uses Vectara's \n * create-corpus API via REST\n */\n\nconst axios = require('axios');\n\nmodule.exports = {\n    createCorpus: async function (customer_id, admin_endpoint, jwt_token) {\n        const data = {\n            'corpus': {\n                'name': 'Test Corpus from NodeJS',\n                'description': 'Dummy description'\n            }\n        };\n        const config = {\n            headers: {\n                'Authorization': `Bearer ${jwt_token}`,\n                'Content-Type': 'application/json',\n                'customer-id': customer_id.toString()\n            }\n        };\n\n        const result = await axios.post(`https://${admin_endpoint}/v1/create-corpus`, data, config);\n        return result;\n    }\n};\n")))}l.isMDXComponent=!0}}]);