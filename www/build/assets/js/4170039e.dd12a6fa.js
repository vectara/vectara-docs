"use strict";(self.webpackChunkwww=self.webpackChunkwww||[]).push([[2373],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>h});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),i=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},l=function(e){var t=i(e.components);return n.createElement(c.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=i(r),m=a,h=u["".concat(c,".").concat(m)]||u[m]||d[m]||o;return r?n.createElement(h,p(p({ref:t},l),{},{components:r})):n.createElement(h,p({ref:t},l))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,p=new Array(o);p[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[u]="string"==typeof e?e:a,p[1]=s;for(var i=2;i<o;i++)p[i]=r[i];return n.createElement.apply(null,p)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},16003:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>p,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>i});var n=r(87462),a=(r(67294),r(3905));const o={id:"createCorpus.php",title:"createCorpus.php",sidebar_label:"PHP"},p=void 0,s={unversionedId:"getting-started-samples/createCorpus.php",id:"getting-started-samples/createCorpus.php",title:"createCorpus.php",description:"This is an example of using the platform via REST.  For more sample code, including any dependencies this file has, please have a look at our GitHub examples repository.  This file can be found in that repo at php/rest/createCorpus.php",source:"@site/docs/getting-started-samples/createCorpus.php.md",sourceDirName:"getting-started-samples",slug:"/getting-started-samples/createCorpus.php",permalink:"/docs/getting-started-samples/createCorpus.php",draft:!1,editUrl:"https://github.com/vectara/vectara-docs/tree/master/www/docs/getting-started-samples/createCorpus.php.md",tags:[],version:"current",frontMatter:{id:"createCorpus.php",title:"createCorpus.php",sidebar_label:"PHP"},sidebar:"someSidebar",previous:{title:"NodeJS",permalink:"/docs/getting-started-samples/create_corpus.js"},next:{title:"Python",permalink:"/docs/getting-started-samples/rest_create_corpus.py"}},c={},i=[],l={toc:i};function u(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"This is an example of using the platform via REST.  For more sample code, including any dependencies this file has, please have a look at our GitHub examples repository.  This file can be found in that repo at ",(0,a.kt)("a",{href:"https://github.com/vectara/getting-started/tree/main/language-examples/php/rest/createCorpus.php"},"php/rest/createCorpus.php")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="php/rest/createCorpus.php"',title:'"php/rest/createCorpus.php"'},"<?php\n/**\n * Creates a corpus in Vectara platform using HTTP/REST.\n *\n * @auth_url        Authentication URL for this customer.\n * @client_id       App client ID.\n * @client_secret   App client secret.\n * @customer_id     Unique customer ID in Vectara platform.\n * @admin_endpoint  The endpoint of Vectara Admin server.\n *\n * Returns          The result of createCorpus rest call.\n */\ninclude 'getJwtToken.php';\n\n$url = 'https://' . $_POST['admin_endpoint'] . '/v1/create-corpus';\n$customer_id = $_POST['customer_id'];\n\n$jwt_token = get_token(\n    $_POST['auth_url'],\n    $_POST['client_id'],\n    $_POST['client_secret']\n);\nif (empty($jwt_token)) {\n    echo 'Could not obtain JWT token. Please check your credentials.';\n    return;\n}\n\n$corpus_data = [\n    'name' => 'Test Corpus via PHP',\n    'description' => 'Test Description',\n];\n\n$ch = curl_init();\ncurl_setopt($ch, CURLOPT_URL, $url);\ncurl_setopt($ch, CURLOPT_POST, true);\ncurl_setopt($ch, CURLOPT_HTTPHEADER, [\n    'Content-Type:application/json',\n    'Authorization: Bearer ' . $jwt_token,\n    'customer-id: ' . strval($customer_id),\n]);\ncurl_setopt($ch, CURLOPT_POSTFIELDS, json_encode(['corpus' => $corpus_data]));\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\n\n//execute post\n$result = curl_exec($ch);\ncurl_close($ch);\n\necho $result;\n?>\n\n")))}u.isMDXComponent=!0}}]);