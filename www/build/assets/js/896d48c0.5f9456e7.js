"use strict";(self.webpackChunkwww=self.webpackChunkwww||[]).push([[390],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>h});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=p(n),m=o,h=u["".concat(s,".").concat(m)]||u[m]||d[m]||i;return n?r.createElement(h,a(a({ref:t},l),{},{components:n})):r.createElement(h,a({ref:t},l))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[u]="string"==typeof e?e:o,a[1]=c;for(var p=2;p<i;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},55531:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>p});var r=n(87462),o=(n(67294),n(3905));const i={id:"indexDocument.php",title:"indexDocument.php",sidebar_label:"PHP"},a=void 0,c={unversionedId:"getting-started-samples/indexDocument.php",id:"getting-started-samples/indexDocument.php",title:"indexDocument.php",description:"This is an example of using the platform via REST.  For more sample code, including any dependencies this file has, please have a look at our GitHub examples repository.  This file can be found in that repo at php/rest/indexDocument.php",source:"@site/docs/getting-started-samples/indexDocument.php.md",sourceDirName:"getting-started-samples",slug:"/getting-started-samples/indexDocument.php",permalink:"/docs/getting-started-samples/indexDocument.php",draft:!1,editUrl:"https://github.com/vectara/vectara-docs/tree/master/www/docs/getting-started-samples/indexDocument.php.md",tags:[],version:"current",frontMatter:{id:"indexDocument.php",title:"indexDocument.php",sidebar_label:"PHP"},sidebar:"someSidebar",previous:{title:"NodeJS",permalink:"/docs/getting-started-samples/index_document.js"},next:{title:"Python",permalink:"/docs/getting-started-samples/rest_index_document.py"}},s={},p=[],l={toc:p};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"This is an example of using the platform via REST.  For more sample code, including any dependencies this file has, please have a look at our GitHub examples repository.  This file can be found in that repo at ",(0,o.kt)("a",{href:"https://github.com/vectara/getting-started/tree/main/language-examples/php/rest/indexDocument.php"},"php/rest/indexDocument.php")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="php/rest/indexDocument.php"',title:'"php/rest/indexDocument.php"'},"<?php\n/**\n * Indexes a document in Vectara platform using HTTP/REST.\n *\n * @auth_url           Authentication URL for this customer.\n * @client_id          App client ID.\n * @client_secret      App client secret.\n * @corpus_id          Corpus ID of the corpus to index to.\n * @customer_id        Unique customer ID in Vectara platform.\n * @indexing_endpoint  The endpoint of Vectara Admin server.\n *\n * Returns             The result of index REST call.\n */\ninclude 'getJwtToken.php';\n\n$url = 'https://' . $_POST['indexing_endpoint'] . '/v1/index';\n$customer_id = $_POST['customer_id'];\n\n$jwt_token = get_token(\n    $_POST['auth_url'],\n    $_POST['client_id'],\n    $_POST['client_secret']\n);\nif (empty($jwt_token)) {\n    echo 'Could not obtain JWT token. Please check your credentials.';\n    return;\n}\n\n$index_data = [\n    'customer_id' => $customer_id,\n    'corpus_id' => $_POST['corpus_id'],\n    'document' => [\n        'document_id' => 'doc-id-1',\n        'title' => 'My document title',\n        'metadata_json' => json_encode([\n            'book-name' => 'Example title',\n            'collection' => 'Mathematics',\n            'author' => 'Example Author'\n        ]),\n        'section' => array([\n            'text' => 'This is a test document'\n        ])\n    ],\n];\n/**\n * Note that both documents and sections can contain titles and\n * metadata_json.  These are optional for both levels.\n */\n\n$ch = curl_init();\ncurl_setopt($ch, CURLOPT_URL, $url);\ncurl_setopt($ch, CURLOPT_POST, true);\ncurl_setopt($ch, CURLOPT_HTTPHEADER, [\n    'Content-Type:application/json',\n    'Authorization: Bearer ' . $jwt_token,\n    'customer-id: ' . strval($customer_id),\n]);\ncurl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($index_data));\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\n\n//execute post\n$result = curl_exec($ch);\ncurl_close($ch);\n\necho $result;\n?>\n\n")))}u.isMDXComponent=!0}}]);