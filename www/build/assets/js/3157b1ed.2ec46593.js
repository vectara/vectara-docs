"use strict";(self.webpackChunkwww=self.webpackChunkwww||[]).push([[6590,2917],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=c(n),m=a,f=u["".concat(l,".").concat(m)]||u[m]||p[m]||o;return n?r.createElement(f,i(i({ref:t},d),{},{components:n})):r.createElement(f,i({ref:t},d))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},85162:(e,t,n)=>{n.d(t,{Z:()=>i});var r=n(67294),a=n(86010);const o="tabItem_Ymn6";function i(e){let{children:t,hidden:n,className:i}=e;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(o,i),hidden:n},t)}},65488:(e,t,n)=>{n.d(t,{Z:()=>m});var r=n(87462),a=n(67294),o=n(86010),i=n(72389),s=n(67392),l=n(7094),c=n(12466);const d="tabList__CuJ",u="tabItem_LNqP";function p(e){const{lazy:t,block:n,defaultValue:i,values:p,groupId:m,className:f}=e,g=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),v=p??g.map((e=>{let{props:{value:t,label:n,attributes:r}}=e;return{value:t,label:n,attributes:r}})),h=(0,s.l)(v,((e,t)=>e.value===t.value));if(h.length>0)throw new Error(`Docusaurus error: Duplicate values "${h.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const b=null===i?i:i??g.find((e=>e.props.default))?.props.value??g[0].props.value;if(null!==b&&!v.some((e=>e.value===b)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${b}" but none of its children has the corresponding value. Available values are: ${v.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:y,setTabGroupChoices:k}=(0,l.U)(),[w,D]=(0,a.useState)(b),x=[],{blockElementScrollPositionUntilNextRender:T}=(0,c.o5)();if(null!=m){const e=y[m];null!=e&&e!==w&&v.some((t=>t.value===e))&&D(e)}const O=e=>{const t=e.currentTarget,n=x.indexOf(t),r=v[n].value;r!==w&&(T(t),D(r),null!=m&&k(m,String(r)))},C=e=>{let t=null;switch(e.key){case"Enter":O(e);break;case"ArrowRight":{const n=x.indexOf(e.currentTarget)+1;t=x[n]??x[0];break}case"ArrowLeft":{const n=x.indexOf(e.currentTarget)-1;t=x[n]??x[x.length-1];break}}t?.focus()};return a.createElement("div",{className:(0,o.Z)("tabs-container",d)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},f)},v.map((e=>{let{value:t,label:n,attributes:i}=e;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,key:t,ref:e=>x.push(e),onKeyDown:C,onClick:O},i,{className:(0,o.Z)("tabs__item",u,i?.className,{"tabs__item--active":w===t})}),n??t)}))),t?(0,a.cloneElement)(g.filter((e=>e.props.value===w))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},g.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==w})))))}function m(e){const t=(0,i.Z)();return a.createElement(p,(0,r.Z)({key:String(t)},e))}},78473:(e,t,n)=>{n.r(t),n.d(t,{Config:()=>u,assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var r=n(87462),a=(n(67294),n(3905)),o=n(53487);const i={},s=void 0,l={unversionedId:"definitions",id:"definitions",title:"definitions",description:"",source:"@site/docs/definitions.md",sourceDirName:".",slug:"/definitions",permalink:"/docs/definitions",draft:!1,editUrl:"https://github.com/vectara/vectara-docs/tree/master/www/docs/definitions.md",tags:[],version:"current",frontMatter:{}},c={},d=[];function u(e){return o.g[e.v]}const p={toc:d,Config:u};function m(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}))}m.isMDXComponent=!0},2766:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>d,default:()=>g,frontMatter:()=>c,metadata:()=>u,toc:()=>m});var r=n(87462),a=(n(67294),n(3905)),o=n(65488),i=n(85162),s=n(78473),l=n(53487);const c={id:"deleting-documents",title:"Deleting Documents",sidebar_label:"Deleting Documents"},d=void 0,u={unversionedId:"indexing-apis/deleting-documents",id:"indexing-apis/deleting-documents",title:"Deleting Documents",description:"Endpoint Address",source:"@site/docs/indexing-apis/deleting_documents.md",sourceDirName:"indexing-apis",slug:"/indexing-apis/deleting-documents",permalink:"/docs/indexing-apis/deleting-documents",draft:!1,editUrl:"https://github.com/vectara/vectara-docs/tree/master/www/docs/indexing-apis/deleting_documents.md",tags:[],version:"current",frontMatter:{id:"deleting-documents",title:"Deleting Documents",sidebar_label:"Deleting Documents"},sidebar:"someSidebar",previous:{title:"Python",permalink:"/docs/getting-started-samples/rest_upload_file.py"},next:{title:"API Definition",permalink:"/docs/search-apis/search"}},p={},m=[{value:"Endpoint Address",id:"endpoint-address",level:2},{value:"Example",id:"example",level:3}],f={toc:m};function g(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"endpoint-address"},"Endpoint Address"),(0,a.kt)(s.Config,{v:"names.product",mdxType:"Config"})," exposes a REST endpoint at the following URL to delete content from a corpus:",(0,a.kt)("code",null,"https://",(0,a.kt)(s.Config,{v:"domains.rest.indexing",mdxType:"Config"}),"/v1/delete-doc"),"This page describes the details of interacting with this endpoint.",(0,a.kt)("p",null,"A request to delete a document from a corpus consists of three key pieces of information:\nthe customer ID, the corpus ID, and the document ID."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},"message DeleteDocumentRequest {\n  int64 customer_id = 1;\n  int64 corpus_id = 2;\n  string document_id = 3;\n}\n")),(0,a.kt)("p",null,"The reply from the server consists of nothing yet. Note that the operation is not\nsynchronous: the document may still be returned in query results. The platform typically\ntakes 5-10 mins before the document is removed from serving."),(0,a.kt)("p",null,"The server returns ",(0,a.kt)("a",{parentName:"p",href:"https://grpc.github.io/grpc/core/md_doc_statuscodes.html"},"gRPC status codes"),".\nFor example:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"INTERNAL"),": An internal error code indicates a failure inside the platform, and an immediate\nretry may not succeed."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"UNAVAILABLE"),": The service is temporarily unavailable, and the operation should be retried,\npreferably with a backoff. Note that the deletion operation is idempotent, so it is fine to re-apply.")),(0,a.kt)("h3",{id:"example"},"Example"),(0,a.kt)("p",null,"The code snippet below illustrates how to delete a document from a corpus. For information\non how to get the call credentials and metadata, please consult\n",(0,a.kt)("a",{parentName:"p",href:"/docs/authentication"},"The OAuth 2.0 documentation"),"."),(0,a.kt)(o.Z,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"Python",value:"py"}],mdxType:"Tabs"},(0,a.kt)(i.Z,{value:"py",mdxType:"TabItem"},(0,a.kt)("pre",null,`# Create the document deletion request.\nrequest = common_pb2.DeleteDocumentRequest()\nrequest.customer_id = customer_id\nrequest.corpus_id = _CORPUS_ID\nrequest.document_id = "en.wikipedia.org/wiki/California"\n\n# Create the gRPC stub.\nstub = services_pb2_grpc.IndexServiceStub(\n  grpc.secure_channel("${l.g["domains.grpc.indexing"]}:443", grpc.ssl_channel_credentials()))\n\n# Send the request to the server.\nresponse = stub.Delete(request,\n                       credentials=call_credentials,\n                       metadata=[('customer-id-bin', packed_customer_id)])\n`)),(0,a.kt)(i.Z,{value:"java",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'indexingStub.withCallCredentials(credentials(tokenSupplier.get().getOrDie()))\n    .withDeadlineAfter(30, TimeUnit.SECONDS)    // Always set a deadline.\n    .delete(\n        DeleteDocumentRequest\n            .newBuilder()\n            .setCustomerId(customerId)\n            .setCorpusId(corpusId)\n            .setDocumentId("en.wikipedia.org/wiki/California")\n            .build());\n')))))}g.isMDXComponent=!0},53487:e=>{e.exports=JSON.parse('{"g":{"domains.rest.serving":"api.vectara.io","domains.rest.admin":"api.vectara.io","domains.rest.indexing":"api.vectara.io","domains.grpc.serving":"serving.vectara.io","domains.grpc.admin":"admin.vectara.io","domains.grpc.indexing":"indexing.vectara.io","domains.oauth":"vectara-prod-${CUSTOMER_ID}.auth.us-west-2.amazoncognito.com","package.protobuf":"com.vectara","package.java":"com.vectara","package.php":"Com\\\\Vectara","names.company":"Vectara","names.product":"Vectara"}}')}}]);