"use strict";(self.webpackChunkwww=self.webpackChunkwww||[]).push([[6662],{36621:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>y,contentTitle:()=>m,default:()=>x,frontMatter:()=>c,metadata:()=>h,toc:()=>f});var o=a(87462),i=(a(67294),a(3905)),r=a(26389),s=a(94891),n=a(75190),d=a(47507),l=a(24310),p=a(63303),u=(a(75035),a(85162));const c={id:"file-upload",title:"FileUpload",description:"FileUpload",sidebar_label:"FileUpload",hide_title:!0,hide_table_of_contents:!0,api:{operationId:"FileUpload",tags:["IndexService"],responses:{200:{description:"A successful response"},400:{description:"An invalid request was sent.  e.g. one or more parameters was missing, or the corpus does not exist.",content:{"application/json":{schema:{type:"object",properties:{httpCode:{type:"integer",description:"Returned HTTP code"}}}}}},401:{description:"The request was not authenticated"},403:{description:"The caller is not authorized to add documents to the corpus"},409:{description:"A document already exists in the corpus with the same document ID, yet the contents of the indexed document are different than the file being uploaded. Since the indexer is idempotent, the same document (identified by the document ID) can be uploaded multiple times. The indexer does not support updates yet, so an error is returned when a different document is uploaded for the same document ID. Note that when a raw file is uploaded, the file name is used as the document ID."},507:{description:"There is no more indexing quota left for the corpus or customer to index more documents.  Upgrade your account, add a credit card, or contact sales."}},parameters:[{in:"query",name:"c",required:"true",schema:{type:"integer"},description:"Customer ID"},{in:"query",name:"o",required:"true",schema:{type:"integer"},description:"Corpus ID"},{in:"query",name:"d",required:"false",schema:{type:"boolean"},description:"If true, the server returns the extracted document that was indexed"}],description:"FileUpload",method:"post",path:"/v1/upload",servers:[{url:"https://api.vectara.io"}],security:[{oAuth:[]}],securitySchemes:{oAuth:{type:"oauth2",flows:{clientCredentials:{tokenUrl:"https://vectara-prod-YOUR_VECTARA_CUSTOMER_ID.auth.us-west-2.amazoncognito.com/oauth2/token"},scopes:{}}}},info:{title:"Vectara REST API",version:"1.0.0",termsOfService:"https://vectara.com/legal/online-customer-agreement/","x-logo":{url:"https://docs.vectara.com/img/vectara_wordmark.png",altText:"Vectara"}},postman:{name:"File Upload",description:{type:"text/plain"},url:{path:["v1","upload"],host:["{{baseUrl}}"],query:[{disabled:!1,description:{content:"(Required) Customer ID",type:"text/plain"},key:"c",value:""},{disabled:!1,description:{content:"(Required) Corpus ID",type:"text/plain"},key:"o",value:""},{disabled:!1,description:{content:"(Required) If true, the server returns the extracted document that was indexed",type:"text/plain"},key:"d",value:""}],variable:[]},header:[{key:"Accept",value:"application/json"}],method:"POST"}},sidebar_class_name:"post api-method",info_path:"docs/rest-api/vectara-rest-api",custom_edit_url:null},m=void 0,h={unversionedId:"rest-api/file-upload",id:"rest-api/file-upload",title:"FileUpload",description:"FileUpload",source:"@site/docs/rest-api/file-upload.api.mdx",sourceDirName:"rest-api",slug:"/rest-api/file-upload",permalink:"/docs/rest-api/file-upload",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"file-upload",title:"FileUpload",description:"FileUpload",sidebar_label:"FileUpload",hide_title:!0,hide_table_of_contents:!0,api:{operationId:"FileUpload",tags:["IndexService"],responses:{200:{description:"A successful response"},400:{description:"An invalid request was sent.  e.g. one or more parameters was missing, or the corpus does not exist.",content:{"application/json":{schema:{type:"object",properties:{httpCode:{type:"integer",description:"Returned HTTP code"}}}}}},401:{description:"The request was not authenticated"},403:{description:"The caller is not authorized to add documents to the corpus"},409:{description:"A document already exists in the corpus with the same document ID, yet the contents of the indexed document are different than the file being uploaded. Since the indexer is idempotent, the same document (identified by the document ID) can be uploaded multiple times. The indexer does not support updates yet, so an error is returned when a different document is uploaded for the same document ID. Note that when a raw file is uploaded, the file name is used as the document ID."},507:{description:"There is no more indexing quota left for the corpus or customer to index more documents.  Upgrade your account, add a credit card, or contact sales."}},parameters:[{in:"query",name:"c",required:"true",schema:{type:"integer"},description:"Customer ID"},{in:"query",name:"o",required:"true",schema:{type:"integer"},description:"Corpus ID"},{in:"query",name:"d",required:"false",schema:{type:"boolean"},description:"If true, the server returns the extracted document that was indexed"}],description:"FileUpload",method:"post",path:"/v1/upload",servers:[{url:"https://api.vectara.io"}],security:[{oAuth:[]}],securitySchemes:{oAuth:{type:"oauth2",flows:{clientCredentials:{tokenUrl:"https://vectara-prod-YOUR_VECTARA_CUSTOMER_ID.auth.us-west-2.amazoncognito.com/oauth2/token"},scopes:{}}}},info:{title:"Vectara REST API",version:"1.0.0",termsOfService:"https://vectara.com/legal/online-customer-agreement/","x-logo":{url:"https://docs.vectara.com/img/vectara_wordmark.png",altText:"Vectara"}},postman:{name:"File Upload",description:{type:"text/plain"},url:{path:["v1","upload"],host:["{{baseUrl}}"],query:[{disabled:!1,description:{content:"(Required) Customer ID",type:"text/plain"},key:"c",value:""},{disabled:!1,description:{content:"(Required) Corpus ID",type:"text/plain"},key:"o",value:""},{disabled:!1,description:{content:"(Required) If true, the server returns the extracted document that was indexed",type:"text/plain"},key:"d",value:""}],variable:[]},header:[{key:"Accept",value:"application/json"}],method:"POST"}},sidebar_class_name:"post api-method",info_path:"docs/rest-api/vectara-rest-api",custom_edit_url:null},sidebar:"restOAS",previous:{title:"Index",permalink:"/docs/rest-api/index"},next:{title:"Query",permalink:"/docs/rest-api/query"}},y={},f=[{value:"FileUpload",id:"fileupload",level:2}],v={toc:f};function x(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,o.Z)({},v,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"fileupload"},"FileUpload"),(0,i.kt)("p",null,"FileUpload"),(0,i.kt)("details",{style:{marginBottom:"1rem"},"data-collapsed":!1,open:!0},(0,i.kt)("summary",{style:{}},(0,i.kt)("strong",null,"Query Parameters")),(0,i.kt)("div",null,(0,i.kt)("ul",null,(0,i.kt)(n.Z,{className:"paramsItem",param:{in:"query",name:"c",required:"true",schema:{type:"integer"},description:"Customer ID"},mdxType:"ParamsItem"}),(0,i.kt)(n.Z,{className:"paramsItem",param:{in:"query",name:"o",required:"true",schema:{type:"integer"},description:"Corpus ID"},mdxType:"ParamsItem"}),(0,i.kt)(n.Z,{className:"paramsItem",param:{in:"query",name:"d",required:"false",schema:{type:"boolean"},description:"If true, the server returns the extracted document that was indexed"},mdxType:"ParamsItem"})))),(0,i.kt)("div",null,(0,i.kt)(r.Z,{mdxType:"ApiTabs"},(0,i.kt)(u.Z,{label:"200",value:"200",mdxType:"TabItem"},(0,i.kt)("div",null,(0,i.kt)("p",null,"A successful response")),(0,i.kt)("div",null)),(0,i.kt)(u.Z,{label:"400",value:"400",mdxType:"TabItem"},(0,i.kt)("div",null,(0,i.kt)("p",null,"An invalid request was sent.  e.g. one or more parameters was missing, or the corpus does not exist.")),(0,i.kt)("div",null,(0,i.kt)(s.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,i.kt)(u.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,i.kt)(p.Z,{mdxType:"SchemaTabs"},(0,i.kt)(u.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,i.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,i.kt)("summary",{style:{textAlign:"left"}},(0,i.kt)("strong",null,"Schema")),(0,i.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.kt)("ul",{style:{marginLeft:"1rem"}},(0,i.kt)(l.Z,{collapsible:!1,name:"httpCode",required:!1,deprecated:void 0,schemaDescription:"Returned HTTP code",schemaName:"integer",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"})))),(0,i.kt)(u.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,i.kt)(d.Z,{responseExample:'{\n  "httpCode": 0\n}',language:"json",mdxType:"ResponseSamples"}))))))),(0,i.kt)(u.Z,{label:"401",value:"401",mdxType:"TabItem"},(0,i.kt)("div",null,(0,i.kt)("p",null,"The request was not authenticated")),(0,i.kt)("div",null)),(0,i.kt)(u.Z,{label:"403",value:"403",mdxType:"TabItem"},(0,i.kt)("div",null,(0,i.kt)("p",null,"The caller is not authorized to add documents to the corpus")),(0,i.kt)("div",null)),(0,i.kt)(u.Z,{label:"409",value:"409",mdxType:"TabItem"},(0,i.kt)("div",null,(0,i.kt)("p",null,"A document already exists in the corpus with the same document ID, yet the contents of the indexed document are different than the file being uploaded. Since the indexer is idempotent, the same document (identified by the document ID) can be uploaded multiple times. The indexer does not support updates yet, so an error is returned when a different document is uploaded for the same document ID. Note that when a raw file is uploaded, the file name is used as the document ID.")),(0,i.kt)("div",null)),(0,i.kt)(u.Z,{label:"507",value:"507",mdxType:"TabItem"},(0,i.kt)("div",null,(0,i.kt)("p",null,"There is no more indexing quota left for the corpus or customer to index more documents.  Upgrade your account, add a credit card, or contact sales.")),(0,i.kt)("div",null)))))}x.isMDXComponent=!0}}]);