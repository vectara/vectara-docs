"use strict";(self.webpackChunkwww=self.webpackChunkwww||[]).push([[5816],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=s(n),m=a,f=u["".concat(l,".").concat(m)]||u[m]||d[m]||i;return n?r.createElement(f,o(o({ref:t},c),{},{components:n})):r.createElement(f,o({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[u]="string"==typeof e?e:a,o[1]=p;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},73089:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>p,toc:()=>s});var r=n(87462),a=(n(67294),n(3905));const i={id:"uploadFile.php",title:"uploadFile.php",sidebar_label:"PHP"},o=void 0,p={unversionedId:"getting-started-samples/uploadFile.php",id:"getting-started-samples/uploadFile.php",title:"uploadFile.php",description:"This is an example of using the platform via REST.  For more sample code, including any dependencies this file has, please have a look at our GitHub examples repository.  This file can be found in that repo at php/rest/uploadFile.php",source:"@site/docs/getting-started-samples/uploadFile.php.md",sourceDirName:"getting-started-samples",slug:"/getting-started-samples/uploadFile.php",permalink:"/docs/getting-started-samples/uploadFile.php",draft:!1,editUrl:"https://github.com/vectara/vectara-docs/tree/master/www/docs/getting-started-samples/uploadFile.php.md",tags:[],version:"current",frontMatter:{id:"uploadFile.php",title:"uploadFile.php",sidebar_label:"PHP"},sidebar:"someSidebar",previous:{title:"NodeJS",permalink:"/docs/getting-started-samples/upload_file.js"},next:{title:"Python",permalink:"/docs/getting-started-samples/rest_upload_file.py"}},l={},s=[],c={toc:s};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"This is an example of using the platform via REST.  For more sample code, including any dependencies this file has, please have a look at our GitHub examples repository.  This file can be found in that repo at ",(0,a.kt)("a",{href:"https://github.com/vectara/getting-started/tree/main/language-examples/php/rest/uploadFile.php"},"php/rest/uploadFile.php")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="php/rest/uploadFile.php"',title:'"php/rest/uploadFile.php"'},"<?php\n/**\n * Indexes a file to a specified corpus in Vectara platform using HTTP/REST.\n *\n * @auth_url            Authentication URL for this customer.\n * @client_id           App client ID.\n * @client_secret       App client secret.\n * @customer_id         Unique customer ID in Vectara platform.\n * @corpus_id           ID of corpus to which data will be indexed.\n * @indexing_endpoint   The endpoint of Vectara Indexing server.\n *\n * Returns              The result of index rest call.\n */\n\ninclude 'getJwtToken.php';\n\n$url = 'https://' . $_POST['indexing_endpoint'] . '/v1/upload';\n$customer_id = $_POST['customer_id'];\n$corpus_id = $_POST['corpus_id'];\n\n$jwt_token = get_token(\n    $_POST['auth_url'],\n    $_POST['client_id'],\n    $_POST['client_secret']\n);\nif (empty($jwt_token)) {\n    echo 'Could not obtain JWT token. Please check your credentials.';\n    return;\n}\n\nfunction makeCurlFile($file)\n{\n    $mime = mime_content_type($file);\n    $info = pathinfo($file);\n    $name = $info['basename'];\n    return new CURLFile($file, $mime, $name);\n}\n\n$ch = curl_init();\n\n$upload_data = [\n    'file' => makeCurlFile('upload.pdf'),\n    'c' => $customer_id,\n    'o' => $corpus_id,\n];\n\ncurl_setopt($ch, CURLOPT_URL, $url);\ncurl_setopt($ch, CURLOPT_POST, true);\ncurl_setopt($ch, CURLOPT_HTTPHEADER, [\n    'Content-Type:multipart/form-data',\n    'Authorization: Bearer ' . $jwt_token,\n]);\ncurl_setopt($ch, CURLOPT_POSTFIELDS, $upload_data);\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\n\n$result = curl_exec($ch);\ncurl_close($ch);\n\necho $result;\n?>\n\n")))}u.isMDXComponent=!0}}]);