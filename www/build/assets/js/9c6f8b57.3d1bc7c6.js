"use strict";(self.webpackChunkwww=self.webpackChunkwww||[]).push([[1941,2917],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=c(n),m=a,f=u["".concat(l,".").concat(m)]||u[m]||p[m]||o;return n?r.createElement(f,i(i({ref:t},d),{},{components:n})):r.createElement(f,i({ref:t},d))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},85162:(e,t,n)=>{n.d(t,{Z:()=>i});var r=n(67294),a=n(86010);const o="tabItem_Ymn6";function i(e){let{children:t,hidden:n,className:i}=e;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(o,i),hidden:n},t)}},65488:(e,t,n)=>{n.d(t,{Z:()=>m});var r=n(87462),a=n(67294),o=n(86010),i=n(72389),s=n(67392),l=n(7094),c=n(12466);const d="tabList__CuJ",u="tabItem_LNqP";function p(e){const{lazy:t,block:n,defaultValue:i,values:p,groupId:m,className:f}=e,h=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),g=p??h.map((e=>{let{props:{value:t,label:n,attributes:r}}=e;return{value:t,label:n,attributes:r}})),v=(0,s.l)(g,((e,t)=>e.value===t.value));if(v.length>0)throw new Error(`Docusaurus error: Duplicate values "${v.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const b=null===i?i:i??h.find((e=>e.props.default))?.props.value??h[0].props.value;if(null!==b&&!g.some((e=>e.value===b)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${b}" but none of its children has the corresponding value. Available values are: ${g.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:y,setTabGroupChoices:x}=(0,l.U)(),[k,w]=(0,a.useState)(b),D=[],{blockElementScrollPositionUntilNextRender:N}=(0,c.o5)();if(null!=m){const e=y[m];null!=e&&e!==k&&g.some((t=>t.value===e))&&w(e)}const I=e=>{const t=e.currentTarget,n=D.indexOf(t),r=g[n].value;r!==k&&(N(t),w(r),null!=m&&x(m,String(r)))},T=e=>{let t=null;switch(e.key){case"Enter":I(e);break;case"ArrowRight":{const n=D.indexOf(e.currentTarget)+1;t=D[n]??D[0];break}case"ArrowLeft":{const n=D.indexOf(e.currentTarget)-1;t=D[n]??D[D.length-1];break}}t?.focus()};return a.createElement("div",{className:(0,o.Z)("tabs-container",d)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},f)},g.map((e=>{let{value:t,label:n,attributes:i}=e;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:k===t?0:-1,"aria-selected":k===t,key:t,ref:e=>D.push(e),onKeyDown:T,onClick:I},i,{className:(0,o.Z)("tabs__item",u,i?.className,{"tabs__item--active":k===t})}),n??t)}))),t?(0,a.cloneElement)(h.filter((e=>e.props.value===k))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},h.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==k})))))}function m(e){const t=(0,i.Z)();return a.createElement(p,(0,r.Z)({key:String(t)},e))}},78473:(e,t,n)=>{n.r(t),n.d(t,{Config:()=>u,assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var r=n(87462),a=(n(67294),n(3905)),o=n(53487);const i={},s=void 0,l={unversionedId:"definitions",id:"definitions",title:"definitions",description:"",source:"@site/docs/definitions.md",sourceDirName:".",slug:"/definitions",permalink:"/docs/definitions",draft:!1,editUrl:"https://github.com/vectara/vectara-docs/tree/master/www/docs/definitions.md",tags:[],version:"current",frontMatter:{}},c={},d=[];function u(e){return o.g[e.v]}const p={toc:d,Config:u};function m(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}))}m.isMDXComponent=!0},74757:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var r=n(87462),a=(n(67294),n(3905)),o=(n(65488),n(85162),n(78473));n(53487);const i={id:"core_indexing",title:"Low-level Indexing",sidebar_label:"API Definition"},s=void 0,l={unversionedId:"indexing-apis/core_indexing",id:"indexing-apis/core_indexing",title:"Low-level Indexing",description:"The low-level indexing API provides low-level access to the semantic indexing",source:"@site/docs/indexing-apis/core_indexing.md",sourceDirName:"indexing-apis",slug:"/indexing-apis/core_indexing",permalink:"/docs/indexing-apis/core_indexing",draft:!1,editUrl:"https://github.com/vectara/vectara-docs/tree/master/www/docs/indexing-apis/core_indexing.md",tags:[],version:"current",frontMatter:{id:"core_indexing",title:"Low-level Indexing",sidebar_label:"API Definition"},sidebar:"someSidebar",previous:{title:"Python",permalink:"/docs/getting-started-samples/rest_index_document.py"},next:{title:"API Definition",permalink:"/docs/indexing-apis/file-upload"}},c={},d=[{value:"Full Definition",id:"full-definition",level:2},{value:"Service",id:"service",level:3},{value:"Document Index Request",id:"document-index-request",level:3},{value:"Core Document",id:"core-document",level:3},{value:"Core Document Part",id:"core-document-part",level:3}],u={toc:d};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The low-level indexing API provides low-level access to the semantic indexing\ncapabilities of the platform. It is reserved for advanced use cases and\nnormal users should use the ",(0,a.kt)("a",{parentName:"p",href:"indexing"},"Default API"),"."),(0,a.kt)("h2",{id:"full-definition"},"Full Definition"),(0,a.kt)("p",null,"The full definition of the gRPC interface is covered below."),(0,a.kt)("h3",{id:"service"},"Service"),(0,a.kt)("p",null,"The indexing service operates in two modes: ",(0,a.kt)("em",{parentName:"p"},"incremental")," and ",(0,a.kt)("em",{parentName:"p"},"batch"),". In\nincremental mode, individual documents or messages are sent to be indexed. In\na short period of time, generally a few minutes, the new content will become\navailable in the search index."),(0,a.kt)("p",null,"The definition of the incremental service is shown below."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},"service CoreIndexService {\n  // Adds a document to the corpus.\n  rpc Index(IndexCoreDocumentRequest) returns (IndexCoreDocumentResponse) {}\n}\n")),(0,a.kt)("p",null,"When there are a large number of documents to process, it is more efficient to\nprocess them using the batch interface. This is described below."),(0,a.kt)("h3",{id:"document-index-request"},"Document Index Request"),(0,a.kt)("p",null,"A request to add data into a corpus consists of three key pieces of information:\nthe customer ID, the corpus ID, and the data itself, represented as a\n",(0,a.kt)("strong",{parentName:"p"},"CoreDocument")," message."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},"message IndexCoreDocumentRequest {\n  int64 customer_id = 1;\n  int64 corpus_id = 2;\n  CoreDocument document = 3;\n}\n")),(0,a.kt)("p",null,"The reply from the server consists of nothing yet. Note that the reply does not\nblock. In other words, the information in the request is not yet available in\nthe index when the RPC returns."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},"message IndexDocumentReply {\n}\n")),(0,a.kt)("h3",{id:"core-document"},"Core Document"),(0,a.kt)("p",null,"The document is a container of related textual items that are indexed. It\ndefines an ID, ",(0,a.kt)("strong",{parentName:"p"},"document_id"),", which must be unique among all the documents in\nthe same corpus. It may optionally define metadata, ",(0,a.kt)("strong",{parentName:"p"},"metadata_json"),"."),(0,a.kt)("p",null,"Two fields, ",(0,a.kt)("strong",{parentName:"p"},"default_part_context")," and ",(0,a.kt)("strong",{parentName:"p"},"custom_dims"),", provide default values\nfor the corresponding sub-document fields, should they fail to define either\nof these explicitly."),(0,a.kt)("p",null,"Most importantly, ",(0,a.kt)("strong",{parentName:"p"},"parts")," defines the actual text items to be indexed."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},"// A document to index.\nmessage CoreDocument {\n  string document_id = 1;\n  string metadata_json = 2;\n  repeated CoreDocumentPart parts = 3;\n  string default_part_context = 4;\n  repeated CustomDimension custom_dims = 5;\n}\n")),(0,a.kt)("h3",{id:"core-document-part"},"Core Document Part"),(0,a.kt)("p",null,"The document part is the atomic unit of ",(0,a.kt)(o.Config,{v:"names.product",mdxType:"Config"}),". Every part is added to\nthe index, and when search results are returned, each result is a document part."),(0,a.kt)("p",null,"The ",(0,a.kt)("strong",{parentName:"p"},"text")," field defines the text. This should generally be a sentence: it\nshould not be shorter, but may be longer, up to the length of an entire\nparagraph, although performance may suffer."),(0,a.kt)("p",null,"The ",(0,a.kt)("strong",{parentName:"p"},"context")," defines the context of the text. It may include any additional\ntextual information that helps in disambiguating the meaning. For instance, it\nmay include the preceding or following paragraphs, the chapter title, or the\ndocument title."),(0,a.kt)("p",null,"The part metadata, held in ",(0,a.kt)("strong",{parentName:"p"},"metadata_json"),", is returned with the document part\nin search query results. It can contain, for example, information that links the\nitem to records in other systems."),(0,a.kt)("p",null,"Finally, ",(0,a.kt)("strong",{parentName:"p"},"custom_dims")," allows you to specify additional factors that can be\nused at query time to control the ranking of results. The dimensions must be\ndefined ahead of time for the corpus, or else they'll be ignored."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},"message CoreDocumentPart {\n  string text = 1;\n  string context = 2;\n  string metadata_json = 3;\n  repeated CustomDimension custom_dims = 4;\n}\n")))}p.isMDXComponent=!0},53487:e=>{e.exports=JSON.parse('{"g":{"domains.rest.serving":"api.vectara.io","domains.rest.admin":"api.vectara.io","domains.rest.indexing":"api.vectara.io","domains.grpc.serving":"serving.vectara.io","domains.grpc.admin":"admin.vectara.io","domains.grpc.indexing":"indexing.vectara.io","domains.oauth":"vectara-prod-${CUSTOMER_ID}.auth.us-west-2.amazoncognito.com","package.protobuf":"com.vectara","package.java":"com.vectara","package.php":"Com\\\\Vectara","names.company":"Vectara","names.product":"Vectara"}}')}}]);