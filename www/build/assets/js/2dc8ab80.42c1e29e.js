"use strict";(self.webpackChunkwww=self.webpackChunkwww||[]).push([[2019],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var s=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,s)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,s,n=function(e,t){if(null==e)return{};var r,s,n={},o=Object.keys(e);for(s=0;s<o.length;s++)r=o[s],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(s=0;s<o.length;s++)r=o[s],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var i=s.createContext({}),c=function(e){var t=s.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},u=function(e){var t=c(e.components);return s.createElement(i.Provider,{value:t},e.children)},l="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return s.createElement(s.Fragment,{},t)}},m=s.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),l=c(r),m=n,f=l["".concat(i,".").concat(m)]||l[m]||d[m]||o;return r?s.createElement(f,a(a({ref:t},u),{},{components:r})):s.createElement(f,a({ref:t},u))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,a=new Array(o);a[0]=m;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p[l]="string"==typeof e?e:n,a[1]=p;for(var c=2;c<o;c++)a[c]=r[c];return s.createElement.apply(null,a)}return s.createElement.apply(null,r)}m.displayName="MDXCreateElement"},37476:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>a,default:()=>l,frontMatter:()=>o,metadata:()=>p,toc:()=>c});var s=r(87462),n=(r(67294),r(3905));const o={id:"rest_reset_corpus.py",title:"rest_reset_corpus.py",sidebar_label:"Python"},a=void 0,p={unversionedId:"getting-started-samples/rest_reset_corpus.py",id:"getting-started-samples/rest_reset_corpus.py",title:"rest_reset_corpus.py",description:"This is an example of using the platform via REST.  For more sample code, including any dependencies this file has, please have a look at our GitHub examples repository.  This file can be found in that repo at python/vectara-rest/restresetcorpus.py",source:"@site/docs/getting-started-samples/rest_reset_corpus.py.md",sourceDirName:"getting-started-samples",slug:"/getting-started-samples/rest_reset_corpus.py",permalink:"/docs/getting-started-samples/rest_reset_corpus.py",draft:!1,editUrl:"https://github.com/vectara/vectara-docs/tree/master/www/docs/getting-started-samples/rest_reset_corpus.py.md",tags:[],version:"current",frontMatter:{id:"rest_reset_corpus.py",title:"rest_reset_corpus.py",sidebar_label:"Python"},sidebar:"someSidebar",previous:{title:"PHP",permalink:"/docs/getting-started-samples/resetCorpus.php"},next:{title:"Custom Dimensions",permalink:"/docs/custom-dimensions"}},i={},c=[],u={toc:c};function l(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,s.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"This is an example of using the platform via REST.  For more sample code, including any dependencies this file has, please have a look at our GitHub examples repository.  This file can be found in that repo at ",(0,n.kt)("a",{href:"https://github.com/vectara/getting-started/tree/main/language-examples/python/vectara-rest/rest_reset_corpus.py"},"python/vectara-rest/rest_reset_corpus.py")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-py",metastring:'title="python/vectara-rest/rest_reset_corpus.py"',title:'"python/vectara-rest/rest_reset_corpus.py"'},'"""Simple example of using the Vectara REST API for resetting a corpus.\n"""\n\nimport json\nimport logging\nimport requests\n\ndef _get_reset_corpus_json(customer_id: int, corpus_id: int):\n    """ Returns a reset corpus json. """\n    corpus = {}\n    corpus["customer_id"] = customer_id\n    corpus["corpus_id"] = corpus_id\n\n    return json.dumps(corpus)\n\ndef reset_corpus(customer_id: int, corpus_id: int, admin_address: str, jwt_token: str):\n    """Reset a corpus.\n    Args:\n        customer_id: Unique customer ID in vectara platform.\n        corpus_id: Corpus ID in vectara platform.\n        admin_address: Address of the admin server. e.g., api.vectara.io\n        jwt_token: A valid Auth token.\n\n    Returns:\n        (response, True) in case of success and returns (error, False) in case of failure.\n    """\n\n    post_headers = {\n        "customer-id": f"{customer_id}",\n        "Authorization": f"Bearer {jwt_token}"\n    }\n    response = requests.post(\n        f"https://{admin_address}/v1/reset-corpus",\n        data=_get_reset_corpus_json(),\n        verify=True,\n        headers=post_headers)\n\n    if response.status_code != 200:\n        logging.error("Reset Corpus failed with code %d, reason %s, text %s",\n                       response.status_code,\n                       response.reason,\n                       response.text)\n        return response, False\n    return response, True\n')))}l.isMDXComponent=!0}}]);