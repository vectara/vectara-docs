"use strict";(self.webpackChunkwww=self.webpackChunkwww||[]).push([[3039],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(n),m=a,h=p["".concat(l,".").concat(m)]||p[m]||d[m]||o;return n?r.createElement(h,i(i({ref:t},u),{},{components:n})):r.createElement(h,i({ref:t},u))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},97480:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var r=n(87462),a=(n(67294),n(3905));const o={id:"authorization",title:"RBAC Roles",sidebar_label:"RBAC Roles"},i=void 0,s={unversionedId:"authorization",id:"authorization",title:"RBAC Roles",description:"Authorization refers to the access control policies that define what actions an",source:"@site/docs/authorization.md",sourceDirName:".",slug:"/authorization",permalink:"/docs/authorization",draft:!1,editUrl:"https://github.com/vectara/vectara-docs/tree/master/www/docs/authorization.md",tags:[],version:"current",frontMatter:{id:"authorization",title:"RBAC Roles",sidebar_label:"RBAC Roles"},sidebar:"someSidebar",previous:{title:"Manage users",permalink:"/docs/console-ui/manage-user"},next:{title:"Payment Management",permalink:"/docs/console-ui/update-credit-card"}},l={},c=[{value:"Roles",id:"roles",level:2},{value:"Account Level Roles",id:"account-level-roles",level:3},{value:"Corpus Level Roles",id:"corpus-level-roles",level:3},{value:"Account Features",id:"account-features",level:2}],u={toc:c};function p(e){let{components:t,...o}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Authorization refers to the access control policies that define what actions an\nauthenticated entity may perform. A ",(0,a.kt)("strong",{parentName:"p"},"permission")," defines a\ngranular action, such as running a query against a specific corpus, or resetting\nits contents. Related permissions are grouped together into ",(0,a.kt)("strong",{parentName:"p"},"roles"),", and\nauthenticated entites may be assigned one or more roles. In this context, an\n",(0,a.kt)("strong",{parentName:"p"},"authenticated entity")," refers to a user or an app client able to attest its\nidentity by presenting a valid JWT token. Even entities that lack explicit roles\nmay still be able to perform operations on the platform through the use of\n",(0,a.kt)("strong",{parentName:"p"},"default permissions"),"."),(0,a.kt)("p",null,"These concepts are explained in further detail in the sections below."),(0,a.kt)("h2",{id:"roles"},"Roles"),(0,a.kt)("h3",{id:"account-level-roles"},"Account Level Roles"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Owner")," is initially granted to whoever created the account. It grants\nall the permissions of the admin roles, below, as well as the ability to\ndelete the account."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Account Administrators")," can perform all actions on a account, except\nmanaging billing activity. These actions include managing users, API keys,\nmanaging corpora etc."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Corpus Administrators")," can perform all corpus related actions within the\naccount. This includes authorizing user roles on an account, deleting a corpus,\ncreating corpora, and transferring ownership of a corpus."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Billing Administrators")," can view and edit account billing activity.")),(0,a.kt)("h3",{id:"corpus-level-roles"},"Corpus Level Roles"),(0,a.kt)("p",null,"Users can also be authorized to perform various actions per corpus. This can be\ndone in the Authorization tab on the Corpus page."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Edit user",src:n(86764).Z,width:"1359",height:"753"})),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The ",(0,a.kt)("strong",{parentName:"li"},"Query")," role (QRY) allows querying the corpus."),(0,a.kt)("li",{parentName:"ul"},"The ",(0,a.kt)("strong",{parentName:"li"},"Indexing")," role (IDX) allows data to be added to the corpus."),(0,a.kt)("li",{parentName:"ul"},"The ",(0,a.kt)("strong",{parentName:"li"},"Administrator")," role (ADM) allows query and indexing the corpus, but\nalso resetting it, deleting it, adding and removing user access, and\ntransferring its ownership.")),(0,a.kt)("p",null,"A corpus may also specifying querying or indexing as ",(0,a.kt)("strong",{parentName:"p"},"default roles"),". A default\nrole is a role that is granted to any authenticated user in the account. For\nexample, if you want any authenticated user to be able to run queries on the\ncorpus, you would add the query role as default. "),(0,a.kt)("h2",{id:"account-features"},"Account Features"),(0,a.kt)("p",null,"Account features differ from roles in that they are enforced for the entire\naccount and are generally tied to account tier. These features include:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Custom dimensions. Whether custom dimensions may be defined for corpora."),(0,a.kt)("li",{parentName:"ol"},"Maximum corpora per query."),(0,a.kt)("li",{parentName:"ol"},"Score retrieval. Whether or not downstream systems have access to the raw\nanswer score. Advanced applications can utilize this information for\nthresholding, and for incorporation into downstream machine-learning systems."),(0,a.kt)("li",{parentName:"ol"},"Encoder swapping. Whether the indexing and querying encoders be swapped to\nsupport semantic similarity matching in addition to question-answer matching."),(0,a.kt)("li",{parentName:"ol"},"Textless. Defines whether corpora be built without storing the indexed text.\nAlthough all textual content is encrypted with per-corpus keys, this option\nmay appeal when an even higher level of security is desired. Enabling this\ncan potentially reduce the quality of search."),(0,a.kt)("li",{parentName:"ol"},"User rate limit. Whether per-user rate limits can be defined."),(0,a.kt)("li",{parentName:"ol"},"Corpus rate limit. Whether per-corpus rate limits can be defined."),(0,a.kt)("li",{parentName:"ol"},"Corpus encryption key. Whether every corpus uses a separate encryption key\nfor maximum security. Currently this feature is enabled for all accounts and\ncannot be disabled."),(0,a.kt)("li",{parentName:"ol"},"Customer managed encryption key. Whether the account may use a customer\nmanaged master encryption key. This is an advanced feature that gives the\ncustomer total control over their data. By revoking access to the master\nkey, the account will become inaccessible within minutes to the entire\nplatform."),(0,a.kt)("li",{parentName:"ol"},"Document metadata. Specifies whether document level metadata may be stored\nwhile indexing. This is currently enabled for all accounts."),(0,a.kt)("li",{parentName:"ol"},"Document part metadata. Specifies whether part level metadata may be stored\nwhile indexing. This is currently enabled for all accounts.")))}p.isMDXComponent=!0},86764:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/corpus_auth-ce1e1ff929be74006c87776dc808d16b.png"}}]);