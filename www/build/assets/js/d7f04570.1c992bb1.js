"use strict";(self.webpackChunkwww=self.webpackChunkwww||[]).push([[6288],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>g});var r=n(67294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},l="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,s=e.mdxType,a=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),l=c(n),m=s,g=l["".concat(p,".").concat(m)]||l[m]||d[m]||a;return n?r.createElement(g,o(o({ref:t},u),{},{components:n})):r.createElement(g,o({ref:t},u))}));function g(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var a=n.length,o=new Array(a);o[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[l]="string"==typeof e?e:s,o[1]=i;for(var c=2;c<a;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},42406:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>l,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var r=n(87462),s=(n(67294),n(3905));const a={id:"RestResetCorpus.cs",title:"RestResetCorpus.cs",sidebar_label:"C#"},o=void 0,i={unversionedId:"getting-started-samples/RestResetCorpus.cs",id:"getting-started-samples/RestResetCorpus.cs",title:"RestResetCorpus.cs",description:"This is an example of using the platform via REST.  For more sample code, including any dependencies this file has, please have a look at our GitHub examples repository.  This file can be found in that repo at csharp/rest/RestResetCorpus.cs",source:"@site/docs/getting-started-samples/RestResetCorpus.cs.md",sourceDirName:"getting-started-samples",slug:"/getting-started-samples/RestResetCorpus.cs",permalink:"/docs/getting-started-samples/RestResetCorpus.cs",draft:!1,editUrl:"https://github.com/vectara/vectara-docs/tree/master/www/docs/getting-started-samples/RestResetCorpus.cs.md",tags:[],version:"current",frontMatter:{id:"RestResetCorpus.cs",title:"RestResetCorpus.cs",sidebar_label:"C#"},sidebar:"someSidebar",previous:{title:"API Definition",permalink:"/docs/admin-apis/reset-corpus"},next:{title:"NodeJS",permalink:"/docs/getting-started-samples/reset_corpus.js"}},p={},c=[],u={toc:c};function l(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"This is an example of using the platform via REST.  For more sample code, including any dependencies this file has, please have a look at our GitHub examples repository.  This file can be found in that repo at ",(0,s.kt)("a",{href:"https://github.com/vectara/getting-started/tree/main/language-examples/csharp/rest/RestResetCorpus.cs"},"csharp/rest/RestResetCorpus.cs")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cs",metastring:'title="csharp/rest/RestResetCorpus.cs"',title:'"csharp/rest/RestResetCorpus.cs"'},'using System.Text.Json;\n\nclass RestResetCorpus\n{\n    /// <summary>\n    /// Calls Vectara platform to reset a corpus.\n    /// </summary>\n    /// <param name="customerId"> The unique customer ID in Vectara platform. </param>\n    /// <param name="corpusId"> The unique ID of the corpus to be reset. </param>\n    /// <param name="adminEndpoint"> Admin API endpoint to which calls will be directed. </param>\n    /// <param name="jwtToken"> A valid authentication token. </param>\n    public static void ResetCorpus(long customerId, long corpusId, string adminEndpoint, string jwtToken)\n    {\n        using (var client = new HttpClient())\n        {\n            try\n            {\n                var request = new HttpRequestMessage\n                {\n                    RequestUri = new Uri($"https://{adminEndpoint}/v1/reset-corpus"),\n                    Method = HttpMethod.Post,\n                };\n\n                Dictionary<String, Object> data = new();\n                data.Add("customer_id", customerId);\n                data.Add("corpus_id", corpusId);\n\n                string jsonData = JsonSerializer.Serialize(data);\n                Console.WriteLine(jsonData);\n\n                request.Content = new StringContent(jsonData);\n                request.Content.Headers.Remove("Content-Type");\n                request.Content.Headers.Add("Content-Type", "application/json");\n\n                request.Headers.Add("Authorization", $"Bearer {jwtToken}");\n                request.Headers.Add("customer-id", customerId.ToString());\n\n                HttpResponseMessage response = client.Send(request);\n                String result = response.Content.ReadAsStringAsync().Result;\n\n                Console.WriteLine(result);\n            }\n            catch (Exception ex)\n            {\n                Console.Error.WriteLine(ex.Message);\n                return;\n            }\n        }\n    }\n}\n')))}l.isMDXComponent=!0}}]);