/**
 * @param {H} h
 * @param {MdastNode} node
 * @param {MdastParent | null} parent
 */
export function one(
  h: H,
  node: MdastNode,
  parent: MdastParent | null
):
  | import('hast').ElementContent
  | import('hast').ElementContent[]
  | null
  | undefined
/**
 * @param {H} h
 * @param {MdastNode} parent
 */
export function all(h: H, parent: MdastNode): import('hast').ElementContent[]
export type MdastNode = import('mdast').Root | import('mdast').Content
export type MdastParent = Extract<MdastNode, import('mdast').Parent>
export type Handler = import('./index.js').Handler
export type H = import('./index.js').H
export type Content = import('./index.js').Content
