"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _Link = _interopRequireDefault(require("@docusaurus/Link"));
var _hooks = require("@theme/ApiItem/hooks");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
/* ============================================================================
 * Copyright (c) Palo Alto Networks
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 * ========================================================================== */

function SecuritySchemes(props) {
  const options = (0, _hooks.useTypedSelector)(state => state.auth.options);
  const selected = (0, _hooks.useTypedSelector)(state => state.auth.selected);
  const infoAuthPath = `/${props.infoPath}#authentication`;
  if (selected === undefined) return null;
  const selectedAuth = options[selected];
  return <details className={`details__demo-panel`} open={false}>
      <summary className={`details__request-summary`}>
        <h4>Authorization</h4>
      </summary>
      {selectedAuth.map(auth => {
      const isApiKey = auth.type === "apiKey";
      const isBearer = auth.type === "http" && auth.key === "Bearer";
      const isOauth2 = auth.type === "oauth2";
      if (isApiKey || isBearer) {
        return <_react.default.Fragment key={auth.key}>
              <pre style={{
            display: "flex",
            flexDirection: "column",
            background: "var(--openapi-card-background-color)"
          }}>
                <span>type: {auth.type}</span>
                <span>
                  name: <_Link.default to={infoAuthPath}>{auth.name}</_Link.default>
                </span>
                <span>in: {auth.in}</span>
              </pre>
            </_react.default.Fragment>;
      }
      if (isOauth2) {
        return <_react.default.Fragment key={selected}>
              <pre style={{
            display: "flex",
            flexDirection: "column",
            background: "var(--openapi-card-background-color)"
          }}>
                <span>
                  type: <_Link.default to={infoAuthPath}>{auth.type}</_Link.default>
                </span>
                {Object.keys(auth.flows).map(flow => {
              return <span key={flow}>flow: {flow}</span>;
            })}
                <span>
                  scopes: <code>{auth.scopes.toString()}</code>
                </span>
              </pre>
            </_react.default.Fragment>;
      }
      return undefined;
    })}
    </details>;
}
var _default = SecuritySchemes;
exports.default = _default;